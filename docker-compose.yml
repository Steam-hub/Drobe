services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-drobe}
      - POSTGRES_USER=${DB_USER:-drobe_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme123}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-drobe_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Channels Layer
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Django Application (uWSGI for HTTP)
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             uwsgi --ini uwsgi.ini"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - DJANGO_SETTINGS_MODULE=Drobe.settings
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-please-change-this-secret-key-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=${DB_NAME:-drobe}
      - DB_USER=${DB_USER:-drobe_user}
      - DB_PASSWORD=${DB_PASSWORD:-changeme123}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - USE_S3=${USE_S3:-False}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-file-upload-lambda-bucket-2025}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-us-east-1}
      - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Daphne for WebSocket connections
  daphne:
    build: .
    command: daphne -b 0.0.0.0 -p 8001 Drobe.asgi:application
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8001"
    environment:
      - DJANGO_SETTINGS_MODULE=Drobe.settings
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-please-change-this-secret-key-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=${DB_NAME:-drobe}
      - DB_USER=${DB_USER:-drobe_user}
      - DB_PASSWORD=${DB_PASSWORD:-changeme123}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - USE_S3=${USE_S3:-False}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-file-upload-lambda-bucket-2025}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-us-east-1}
      - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
      - daphne
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
